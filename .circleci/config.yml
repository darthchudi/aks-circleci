version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{checksum "package.json"}}
            - dependency-cache-
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{checksum "package.json"}}
          paths:
            - node_modules
      - run:
          name: Build typescript
          command: yarn build:tsc
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - dist
  test:
    working_directory: ~/app
    environment:
      NODE_ENV: testing
      SERVICE_NAME: $CIRCLE_PROJECT_REPONAME
      PORT: "3000"
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: yarn test
  deploy:
    working_directory: ~/app
    docker:
      - image: chudi/aks-helm
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build and Push Image to ACR
          command: |
            export APP_NAME=$CIRCLE_PROJECT_REPONAME
            if [ $CIRCLE_BRANCH = "master" ]; then
              export APP_ENV=production
              chmod +x ./hack.sh && ./hack.sh
            elif [ $CIRCLE_BRANCH = "staging" ]; then
              export APP_ENV=staging
              chmod +x ./hack.sh && ./hack.sh
            else
              echo "Skipping Docker image build and push since it is neither master nor staging."
            fi
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - staging
